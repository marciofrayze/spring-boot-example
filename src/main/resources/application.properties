# Enabling cache busting to avoid problems with static files caching.
# More info at: https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#boot-features-spring-mvc-static-content
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
spring.resources.chain.strategy.fixed.enabled=true
spring.resources.chain.strategy.fixed.paths=/js/lib/
spring.resources.chain.strategy.fixed.version=v1

# ATTENTION: In production it should be "validate":
spring.jpa.hibernate.ddl-auto=create

# To use postgresql instead of H2 you may uncomment the lines above.
# The propertie spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation is set
# to avoid an error message when the server is stating.
# Mode details of this "work-around" at: https://hibernate.atlassian.net/browse/HHH-12368
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.datasource.url = jdbc:postgresql://localhost:32768/postgres
# spring.datasource.username = postgres
# spring.datasource.maxActive=20
# spring.datasource.maxIdle=5
# spring.datasource.minIdle=2
# spring.datasource.initialSize=5
# spring.datasource.removeAbandoned=true

# Some other configurations you may find useful:

# Enabling hibernate debugs messages so you can see all the querys that are generated.
# spring.jpa.properties.hibernate.format_sql=true
# logging.level.org.hibernate.SQL=debug
# logging.level.org.hibernate.type.descriptor.sql=trace

# Changing default server port (default is 8080):
# server.port = 9393

# Enable all actuator urls (do not leave this in production! Too many sensitive information is exposed).
# management.endpoints.web.exposure.include=*

# Configuring hibernate to use the postgresql Postgis geolocation feature:
# spring.jpa.database-platform=org.hibernate.spatial.dialect.postgis.PostgisDialect
# spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
